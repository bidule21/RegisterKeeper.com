@using RegisterKeeper.Web.Models
@using RegisterKeeper.Web;
@model RegisterKeeper.Web.ViewModels.Home.IndexViewModel

@{
    ViewBag.Title = "Home";
}

<style type="text/css">
    
</style>


<div class="jumbotron">
    <h1>RegisterKeeper.com</h1>
    <p>Live and historical scores for individual and team target rifle shooting competitions.</p>
</div>

@if (Model.LiveCompetitions.Count > 0)
{
    <div class="row">
        <div class="span12">
            <p>Live competitions:</p>
        </div>
        @foreach (var competition in Model.LiveCompetitions)
        {
            var competitionAction = "#";

            if (competition is IndividualCompetition)
            {
                competitionAction = "/IndividualCompetition/Details/" + competition.Id;
            }
            else if (competition is TeamCompetition)
            {
                competitionAction = "/TeamCompetitions/Details/" + competition.Id;
            }

            <div class="span6">
                <a href="@competitionAction" class="rounded-corners">
                    <h4>@competition.Name</h4>
                    <i>@competition.Location</i>
                </a>
            </div>
        }
    </div>
}

<div class="row">
    <div class="span12">
        <hr />
    </div>
</div>

<div class="row">
    <div class="column-divider"></div>
    <div class="span8">
        <p>Completed competitions:</p>

        @foreach (var competition in Model.CompletedCompetitions)
        {

            var competitionAction = "#";

            if (competition is IndividualCompetition)
            {
                competitionAction = "/IndividualCompetition/Details/" + competition.Id;
            }
            else if (competition is TeamCompetition)
            {
                competitionAction = "/TeamCompetitions/Details/" + competition.Id;
            }
            
            <a href="@competitionAction" class="rounded-corners">
                <h4>@competition.Name</h4>
                @(competition.StartDateTime.ToString("dddd, d MMMM yyyy, h.mmtt"))<br />
                <i>@competition.NumberOfSightingShots&amp;@competition.NumberOfScoringShots @@ @Html.DisplayFor(competition.Distances), @competition.Location</i>

                @{ var individualCompetition = competition as IndividualCompetition; }
                @if (individualCompetition != null && individualCompetition.IndividualRegisterCards != null && individualCompetition.IndividualRegisterCards.Count > 0)
                {
                    <text>
                    <div class="summary-results">
                        <table class="table table-condensed">
                            @* <thead>
                                <tr>
                                    <th>#</th>
                                </tr>
                            </thead>*@

                            @{ int place = 1; }
                            @foreach (var registerCard in individualCompetition.IndividualRegisterCards.OrderByDescending(c => c.TotalScore.Points).Take(3))
                            {
                                <tr>
                                    <td>@place</td>
                                    <td>@registerCard.CompetitorName</td>
                                    <td>@registerCard.CompetitorClass</td>
                                    <td>@registerCard.CompetitorClub</td>
                                    <td>@registerCard.TotalScore</td>
                                </tr>
                            
                                place += 1;
                            }
                        </table>
                    </div>
                    </text>
                }
            </a>
        }

    </div>
    <div class="span4">
        <p>Upcoming competitions:</p>
        @foreach (var competition in Model.UpcomingCompetitions)
        {
            <a href="#" class="rounded-corners">
                <h4>@competition.Name</h4>
                @(competition.StartDateTime.ToString("dddd, d MMMM yyyy, h.mmtt"))<br />
                <i>@competition.Location</i>
            </a>
        }
    </div>
</div>
