@using MvcEnumFlags
@model RegisterKeeper.Web.Models.Competition

@{
    var actionName = (string)ViewBag.ActionName;
    var legendText = (string)ViewBag.Title;
    var submitButtonText = (string)ViewBag.SubmitButtonText;
}

@*
Fork of bootstrap-datetimepicker project
http://www.malot.fr/bootstrap-datetimepicker/
*@
<link href="~/Content/datetimepicker.css" rel="stylesheet" />

@using (Html.BeginForm(@actionName, ViewContext.RouteData.Values["controller"].ToString(), FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@legendText</legend>

        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.StartDateTime, new { @class = "control-label" })
            <div class="controls">
                <div class="input-append date form_datetime">
                    @Html.EditorFor(model => model.StartDateTime)
                    <span class="add-on"><i class="icon-calendar"></i></span>
                </div>
                @Html.ValidationMessageFor(model => model.StartDateTime)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.EndDateTime, new { @class = "control-label" })
            <div class="controls">
                <div class="input-append date form_datetime">
                    @Html.EditorFor(model => model.EndDateTime)
                    <span class="add-on"><i class="icon-calendar"></i></span>
                </div>
                @Html.ValidationMessageFor(model => model.EndDateTime)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Distances, new { @class = "control-label" })
            <div class="controls">
                @Html.CheckBoxesForEnumFlagsFor(model => model.Distances)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Location)
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.NumberOfSightingShots, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.NumberOfSightingShots)
                @Html.ValidationMessageFor(model => model.NumberOfSightingShots)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.NumberOfScoringShots, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.NumberOfScoringShots)
                @Html.ValidationMessageFor(model => model.NumberOfScoringShots)
            </div>
        </div>

        <div class="form-actions">
            <input type="submit" value="@submitButtonText" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn" })
        </div>

    </fieldset>
}


